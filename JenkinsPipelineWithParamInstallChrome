pipeline {
    agent any

    parameters {
        choice(
            name: 'TARGET_GROUP',
            choices: ['troubleshooting', 'zorrinnodes', 'subnetscan'], // Replace with actual groups in your inventory file
            description: 'Select the target group from the inventory file'
        )
    }

    environment {
        REPO_URL = 'https://github.com/jrbanua/ansible.git' // Replace with your GitHub repo URL
        REPO_BRANCH = 'main' // Replace with the desired branch
        INVENTORY_FILE = 'hosts.ini' // Replace with the inventory file path in the repo
        PLAYBOOK = 'install-google-chrome.yml' // Replace with the playbook file name
    }

    stages {
        stage('Clone Repository') {
            steps {
                script {
                    // Clone the GitHub repository
                    sh "rm -rf ansible" // Clean up if the repo already exists
                    sh "git clone --branch ${REPO_BRANCH} ${REPO_URL} ansible"
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    withCredentials([sshUserPrivateKey(credentialsId: 'b40ddfd2-56ac-45d4-bfcd-b5b02aa6a83d', keyFileVariable: 'SSH_KEY')]) {
                    sh """
                        ansible-playbook -i ansible-project/${INVENTORY_FILE} ansible-project/${PLAYBOOK} \
                        --extra-vars "target_group=${params.TARGET_GROUP}" \
                        --private-key ${SSH_KEY}
                    """
}

                    // Run the playbook using the selected group
                    sh """
                        ansible-playbook -i ansible/${INVENTORY_FILE} ansible/${PLAYBOOK} \
                        --extra-vars "target_group=${params.TARGET_GROUP}"
                    """
                }
            }
        }
    }
}