pipeline {
    agent any

    parameters {
        choice(
            name: 'TARGET_GROUP',
            choices: ['troubleshooting', 'zorinnodes', 'subnetscan'], // Replace with actual groups from your inventory
            description: 'Select the target group from the inventory file'
        )
    }

    environment {
        REPO_URL = 'https://github.com/jrbanua/ansible.git' // Replace with your GitHub repo URL
        REPO_BRANCH = 'main' // Replace with the desired branch
        INVENTORY_FILE = 'hosts.ini' // Path to the inventory file in the repository
        PLAYBOOK = 'install-google-chrome.yml' // Name of the playbook
    }

    stages {
        stage('Clone Repository') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'github-ssh-key', keyFileVariable: 'GIT_SSH_KEY')]) {
                    // Clone the GitHub repository using the private key
                    sh """
                        rm -rf ansible
                        GIT_SSH_COMMAND="ssh -i ${GIT_SSH_KEY} -o StrictHostKeyChecking=no" \
                        git clone --branch ${REPO_BRANCH} ${REPO_URL} ansible-project
                    """
                }
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ansible-ssh-key', keyFileVariable: 'ANSIBLE_SSH_KEY')]) {
                    // Run the Ansible playbook with the specified group
                    sh """
                        ansible-playbook -i ansible/${INVENTORY_FILE} ansible/${PLAYBOOK} \
                        --extra-vars "target_group=${params.TARGET_GROUP}" \
                        --private-key ${ANSIBLE_SSH_KEY}
                    """
                }
            }
        }
    }
}
